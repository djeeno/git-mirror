#!/bin/sh
set -e -o pipefail

SOURCE_REPOSITORY_GIT_SSH_COMMAND="${1:?"$(printf '\n  %s\n  %s' "set \$1 as SOURCE_REPOSITORY_GIT_SSH_COMMAND" "e.g.  \"ssh -i ~/.ssh/id_rsa_source.pem\"")"}"
SOURCE_REPOSITORY_GIT_SSH_URI="${2:?"$(printf '\n  %s\n  %s' "set \$2 as SOURCE_REPOSITORY_GIT_SSH_URI" "e.g.  git@github.com:djeeno/git-mirror-source.git")"}"
DESTINATION_REPOSITORY_GIT_SSH_COMMAND="${3:?"$(printf '\n  %s\n  %s' "set \$3 as DESTINATION_REPOSITORY_GIT_SSH_COMMAND" "e.g.  \"ssh -i ~/.ssh/id_rsa_destination.pem\"")"}"
DESTINATION_REPOSITORY_GIT_SSH_URI="${4:?"$(printf '\n  %s\n  %s' "set \$4 as DESTINATION_REPOSITORY_GIT_SSH_URI" "e.g.  git@github.com:djeeno/git-mirror-destination.git")"}"

FORCE=false
if echo "$*" | grep -E -- ' --force'; then
  FORCE=true
fi

TMP_DIR=/tmp/.git-mirror-temporary-directory

cat <<EOF
## source
# GIT_SSH_COMMAND="${SOURCE_REPOSITORY_GIT_SSH_COMMAND}" git clone --mirror ${SOURCE_REPOSITORY_GIT_SSH_URI}

## destination
# GIT_SSH_COMMAND="${DESTINATION_REPOSITORY_GIT_SSH_COMMAND}" git push "$("${FORCE}" && echo --force)" --mirror ${DESTINATION_REPOSITORY_GIT_SSH_URI}

EOF

# pre-check
if [ -e "${TMP_DIR}" ]; then
  echo "ERROR: ${TMP_DIR} exists, require to remove it."
  exit 1
fi

## trap
#trap '{
#  if [ -e "${TMP_DIR}" ]; then
#    rm -rf ${TMP_DIR}
#  fi
#}' EXIT

# tmp dir
mkdir -p "${TMP_DIR}"
cd "${TMP_DIR}"

# source
GIT_SSH_COMMAND="${SOURCE_REPOSITORY_GIT_SSH_COMMAND}" git clone --mirror "${SOURCE_REPOSITORY_GIT_SSH_URI}"

# destination
cd "$(basename -- "${SOURCE_REPOSITORY_GIT_SSH_URI}")"
GIT_SSH_COMMAND="${DESTINATION_REPOSITORY_GIT_SSH_COMMAND}" git push "$("${FORCE}" && echo --force)" --mirror "${DESTINATION_REPOSITORY_GIT_SSH_URI}"
# shellcheck disable=SC2181
if [ $? -eq 0 ] && [ -e "${TMP_DIR}" ]; then
  rm -rf ${TMP_DIR}
fi
